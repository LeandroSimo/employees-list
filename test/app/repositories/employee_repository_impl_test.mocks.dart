// Mocks generated by Mockito 5.4.5 from annotations
// in collaborators_table/test/app/repositories/employee_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:collaborators_table/src/data/datasource/employee_remote_data_source.dart'
    as _i2;
import 'package:collaborators_table/src/data/repositories/employee_repository_impl.dart'
    as _i3;
import 'package:collaborators_table/src/domain/entities/employee_entity.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEmployeeRemoteDataSource_0 extends _i1.SmartFake
    implements _i2.EmployeeRemoteDataSource {
  _FakeEmployeeRemoteDataSource_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [EmployeeRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockEmployeeRepositoryImpl extends _i1.Mock
    implements _i3.EmployeeRepositoryImpl {
  MockEmployeeRepositoryImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.EmployeeRemoteDataSource get remoteDataSource =>
      (super.noSuchMethod(
            Invocation.getter(#remoteDataSource),
            returnValue: _FakeEmployeeRemoteDataSource_0(
              this,
              Invocation.getter(#remoteDataSource),
            ),
          )
          as _i2.EmployeeRemoteDataSource);

  @override
  _i4.Future<List<_i5.EmployeeEntity>> getEmployees() =>
      (super.noSuchMethod(
            Invocation.method(#getEmployees, []),
            returnValue: _i4.Future<List<_i5.EmployeeEntity>>.value(
              <_i5.EmployeeEntity>[],
            ),
          )
          as _i4.Future<List<_i5.EmployeeEntity>>);
}
